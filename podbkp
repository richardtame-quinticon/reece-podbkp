#!/bin/bash

PATH="$PATH:/opt/Purity/sbin"

if (($# == 1))
then
        echo "Running locally."
        PREFIX=
elif (($# == 2))
then
        echo "Running remotely."
        PREFIX="echo ssh $2"
else
        echo "usage: $0 POD [ARRAY]"
        exit 1
fi

echo "$(date '+%F %T'): Starting."
echo "$(date '+%F %T'): Checking if the array ${2:+'$2' }is online..."

if ! $PREFIX purearray list >/dev/null
then
        exit 1
fi


echo "$(date '+%F %T'): Checking if the pod '$1' exists..."

if ! $PREFIX purepod list "$1" >/dev/null
then
        exit 1
fi


echo "$(date '+%F %T'): Checking if the pod '$1' has any volumes..."

if ! $PREFIX purevol list "$1::*" >/dev/null
then
        exit 1
fi


echo "$(date '+%F %T'): Checking if the protection group '$1-async' exists..."

if ! $PREFIX purepgroup list "$1-async" >/dev/null 2>&1
then
        echo "Creating the protection group '$1-async'..."

        if ! $PREFIX purepgroup create "$1-async" >/dev/null
        then
                exit 1
        fi
fi


echo "$(date '+%F %T'): Checking if a transfer is in progress..."

if $PREFIX purepgroup list --nvp --snap --transfer "$1-async" | grep "Progress=." >/dev/null 2>&1
then
        echo "Error on $1-async: Transfer in progress."
        exit 1
fi


echo "$(date '+%F %T'): Cloning the pod '$1'..."

if ! $PREFIX purepod clone "$1" "$1-$$" >/dev/null
then
        exit 1
fi


echo "$(date '+%F %T'): Copying each volume from the pod clone '$1-$$':"

counter=0
ignored=0
total=$($PREFIX purevol listobj "$1-$$::*" | wc -l)

for VOL in $($PREFIX purevol listobj "$1-$$::*")
do
	((counter++))
        BASENAME=${VOL#$1-$$::}
	ASYNCHNAME="${BASENAME}-async"
	ASYNCHNAME=${ASYNCHNAME:0:63}
	echo -n "$(date '+%F %T'): Volume $counter of $total - $BASENAME"

	if [ "$1" == 'AIX-pod' ]
	then
		if [ ${#BASENAME} -ge 22 ]
		then
			echo " ** IGNORING **"
			((ignored++))
			continue
		elif [  "${BASENAME:0:5}" == 't0112' ]
		then
			echo " ** IGNORING **"
			((ignored++))
			continue
		elif [  "${BASENAME:0:5}" == 'p0103' ]
		then
			echo " ** IGNORING **"
			((ignored++))
			continue
		elif [  "${BASENAME}" == 'p0102_tsttrn_au001' ]
		then
			echo " ** IGNORING **"
			((ignored++))
			continue
		elif [  "${BASENAME}" == 'd0102-test-volume' ]
		then
			echo " ** IGNORING **"
			((ignored++))
			continue
		else
			echo ""
		fi
	else
		echo ""
	fi

        if ! $PREFIX purevol list "$ASYNCHNAME" >/dev/null 2>&1
        then
                echo "  Creating the volume '$ASYNCHNAME'..."

                if ! $PREFIX purevol create --size 1m "$ASYNCHNAME" >/dev/null
                then
                        exit 1
                fi
        fi

        if ! $PREFIX purevol list --protect "$ASYNCHNAME" | grep "^$ASYNCHNAME *$1-async *$" >/dev/null 2>&1
        then
                echo "  Adding the volume '$ASYNCHNAME' to the protection group '$1-async'..."

                if ! $PREFIX purevol add --pgroup "$1-async" "$ASYNCHNAME" >/dev/null
                then
                        exit 1
                fi
        fi

        if ! $PREFIX purevol copy --overwrite "$1-$$::$BASENAME" "$ASYNCHNAME" >/dev/null
        then
                exit 1
        fi

        $PREFIX purevol eradicate $($PREFIX purevol listobj --pending-only --type snap "$ASYNCHNAME") >/dev/null
done


echo "$(date '+%F %T'): Replicating the protection group '$1-async'..."

$PREFIX purepgroup snap --apply-retention --replicate-now "$1-async" >/dev/null


echo "$(date '+%F %T'): Cleaning up:"

for VOL in $($PREFIX purevol listobj --pending "$1-$$::*")
do
        echo "- $VOL"
        $PREFIX purevol destroy "$VOL" >/dev/null 2>&1
        $PREFIX purevol eradicate "$VOL" >/dev/null
done

if $PREFIX purepgroup list --pending "$1-$$::*" >/dev/null 2>&1
then
        for PG in $($PREFIX purepgroup listobj --pending "$1-$$::*")
        do
                echo "- $PG"
                $PREFIX purepgroup destroy "$PG" >/dev/null 2>&1
                $PREFIX purepgroup eradicate "$PG" >/dev/null
        done
fi

echo "- $1-$$"
$PREFIX purepod destroy "$1-$$" >/dev/null && $PREFIX purepod eradicate "$1-$$" >/dev/null


echo "$(date '+%F %T'): Done."
